Homework have to be on Bulgarian!!!

# Шаблони за софт. дизайн

### Абстрактна Фабрика

Абстрактна фабрика е създаващ шаблон за дизайн, който се използва в обектно-ориентираното програмиране.

Фабриката е средство за създаване на обекти. Целта на този шаблон за дизайн е да изолира създаването на обектите от тяхното използване.

Абстрактната фабрика капсулира група от методи Фабрика имащи близко предназначение. Клиентският код създава конкретна имплементация на абстрактната фабрика, след това използва основния интерфейс за да създава конкренти обекти. Клиентът не е задължен да знае коя от тези фабрики е създала конкретния обект, защото той използва само основния интерфейс към създадените обекти.

Този шаблон позволява замяната на конкретни класове, дори по време на изпълнение, без да е нужна промяна на кода, който ги използва. Това обаче е за сметка на на допълнително усложняване на кода, което не е много желателно.

### Сек (Singleton)

Сек (Singleton) е създаващ шаблон за дизайн, който се използва в обектно-ориентираното програмиране. Този шаблон се използва обикновено в моделирането на обекти, които трябва да бъдат глобално достъпни за обектите на приложението (например обекта съдържащ структурите с настройките на програмата) или обекти, които се нуждаят от максимално късна инициализация за пестенето на ресурси от паметта. В софтуерното инженерство Сек шаблонът е дизайн шаблон, който представя ограничението на клас до един обект. Това е полезно, когато точно един обект се нуждае да координира действия през системата. Концепцията понякога се отнася за системи, които работят по-ефективно, когато съществува само един обект или когато е ограничено представянето на определен брой обекти. Терминът идва  от математическата концепция за Сек. Има критики откъм използването на Сек, като някои го смятат за анти-модел. Съди се, че е преизползван  и въвежда  ненужни ограничения в ситуации, където например  класа не е наистина необходим и въвежда глобално условни в апликацията.

Изпълнението на СЕК шаблона, трябва да удовлетворява всеки отделен случай и принципите за общодостъпност. Изисква механизъм, който да  достъпи  члена на сек класа, без да се създава клас обект и механизма  да запази стойността на този член между клас-обектите. Сек шаблонът се изпълнява, като се прави клас с метод, който прави нова инстанция на класа, ако не съществува.Ако инстанцията съществува, просто връща референцията на този обект. За да е сигурно, че обектът не може да бъде инстанциран по друг начин, конструкторът се прави частен. Забелязва се, че разликата между простата статична инстанция на класа и шаблона, въпреки че шаблона може да представи статичната инстанция ,също може  да бъде и мързеливо конструиран, не се изисква памет или ресурси, докато не са нужни.

Сек шаблонът трябва да бъде внимателно конструиран в multi-threaded апликации. Ако два треда изпълнят направения метод по едно и също време, когато шаблона вече не съществува, и двата трябва да се проверят за инстанция на шаблона и само тогава да се създаде нов. Ако езикът за програмиране има едновременни възможности за обработка на метода, трябва да бъде конструиран да изпълнява взаимоизключващи операции. Класическото решение на този проблем е взаимоизключващия клас, който показва на обекта, че е представен.

### Строител (Builder)

Строител (Builder) е създаващ шаблон за дизайн, който се използва в обектно-ориентираното програмиране.

Целта е да се раздели създаването на сложен обект от неговото представяне (интерфейс), за да може с един и същ процес да се създават обекти с различно представяне.